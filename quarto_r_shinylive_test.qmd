---
title: Shinylive in Quarto example
format:
  html:
    resources:
      - shinylive-sw.js
filters:
  - shinylive
embed-resources: false
---

This is a Shinylive application embedded in a Quarto doc.

Credit to [TheCoatlessProfessor](https://github.com/coatless-quarto/r-shinylive-dem) and [Lextuga007](https://github.com/Lextuga007/testing-reports/tree/main)

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
library(shiny)
library(NHSRdatasets)
library(NHSRplotthedots)
library(dplyr)

# Load dataset
df <- NHSRdatasets::ae_attendances

# Define UI
ui <- fluidPage(
  titlePanel("SPC Chart for AE Attendances"),
  sidebarLayout(
    sidebarPanel(
      selectInput("org", "Select Org Code:", choices = unique(df$org_code)),
      selectInput("type", "Select Type:", choices = unique(df$type))
    ),
    mainPanel(
      plotOutput("spcPlot")
    )
  )
)

# Define Server
server <- function(input, output) {
  filtered_data <- reactive({
    df |> 
      filter(org_code == input$org, type == input$type)
  })
  
  output$spcPlot <- renderPlot({
    filtered_data() |> 
      ptd_spc(value_field = breaches, date_field = period, improvement_direction = "decrease") |>
      ptd_create_ggplot()
  })
}

# Run App
shinyApp(ui, server)


# Create Shiny app ----
shinyApp(ui = ui, server = server)
```
